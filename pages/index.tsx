import Head from 'next/head'
import { gql, useQuery, useApolloClient } from '@apollo/client'
import { GetStaticProps, NextComponentType } from 'next'
import { getReduxStore, useAppDispatch, useAppSelector } from '../redux'
import { setToken } from '../redux/store'

const message = gql`
  query {
    categories {
      name
      id
    }
  }
`

const Home: NextComponentType = (props) => {
  const { data, loading } = useQuery(message)

  const dispatch = useAppDispatch()

  const client = useApolloClient()

  const token = useAppSelector(state => state.token)

  const clickHandler = async () => {
    await dispatch(setToken("123"))
    await client.query({
      query: gql`query{currentUser{username}}`
    })
  }

  return (
    <div>
      <Head>
        <title>Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <button onClick={clickHandler}>btn</button>
        {!loading &&
          data.categories.map((it) => <p key={it.name}>{it.name}</p>)}
      </main>
    </div>
  )
}

export const getStaticProps: GetStaticProps = async () => {
//   const client = getApolloClient()
//   await client.query({
//     query: message,
//   })
  const store = getReduxStore()

  const { dispatch } = store

  return {
    props: {
      // apolloState: client.cache.extract(),
      reduxState: store.getState(),
    },
  }
}

export default Home
